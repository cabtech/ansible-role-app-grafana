---
# --------------------------------

- name: "Add Grafana account"
  ansible.builtin.user:
    comment: "Grafana runtime account"
    name: "{{ grafana_user }}"
    state: present
    system: true
  become: true
  tags: [ct-grafana]

- name: "Create Grafana directories"
  ansible.builtin.file:
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    owner: "{{ item.owner }}"
    path: "{{ item.name }}"
    state: directory
  loop: "{{ grafana_dirs }}"
  become: true
  tags: [ct-grafana]

- name: "Create package directories"
  ansible.builtin.file:
    group: "{{ grafana_user }}"
    mode: "0755"
    owner: "{{ grafana_user }}"
    path: "{{ grafana_bin_dir }}/{{ item.version }}"
    state: directory
  loop: "{{ grafana_builds }}"
  when: item.state == "present"
  become: true
  tags: [ct-grafana]

- name: "Download Grafana archives"
  ansible.builtin.get_url:
    dest: "{{ grafana_bin_dir }}/{{ item.version }}/grafana-enterprise-{{ item.version }}.{{ grafana_arch }}.{{ grafana_suffix }}"
    mode: "0644"
    timeout: "{{ grafana_internet_timeout }}"
    url: "{{ grafana_download_base }}/grafana-enterprise-{{ item.version }}.{{ grafana_arch }}.{{ grafana_suffix }}"
    validate_certs: false
  loop: "{{ grafana_builds }}"
  when: item.state == "present"
  become: true
  become_user: "{{ grafana_user }}"
  tags: [ct-grafana]

- name: "Expand Grafana archives (IECM)"
  ansible.builtin.unarchive:
    copy: false
    dest: "{{ grafana_bin_dir }}/{{ item.version }}"
    src: "{{ grafana_bin_dir }}/{{ item.version }}/grafana-enterprise-{{ item.version }}.{{ grafana_arch }}.{{ grafana_suffix }}"
  loop: "{{ grafana_builds }}"
  when: item.state == "present"
  become: true
  become_user: "{{ grafana_user }}"
  ignore_errors: "{{ ansible_check_mode }}"
  tags: [ct-grafana]

- name: "Create symlink to active Grafana binaries (IECM)"
  ansible.builtin.file:
    dest: "{{ grafana_bin_dir }}/grafana"
    src: "./{{ grafana_version }}/grafana-{{ grafana_version }}"
    state: link
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ grafana_user }}"
  tags: [ct-grafana]

- name: "Render config file (NL)"
  ansible.builtin.template:
    dest: "{{ grafana_cfg_dir }}/{{ grafana_cfg_file }}"
    group: "{{ grafana_user }}"
    mode: "0640"  # as might contain passwords
    owner: "{{ grafana_user }}"
    src: grafana.ini.j2
  no_log: true
  notify: HandlerGrafanaRestart
  become: true
  tags: [ct-grafana]

- name: "Grafana plugins"
  community.grafana.grafana_plugin:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
    version: "{{ item.version }}"
  loop: "{{ grafana_plugins }}"
  notify: HandlerGrafanaRestart
  become: true
  become_user: "{{ grafana_user }}"
  tags: [ct-grafana]

- name: "Render Grafana systemd unit file"
  ansible.builtin.template:
    dest: /etc/systemd/system/{{ grafana_svc_name }}.service
    group: root
    mode: "0644"
    owner: root
    src: "systemd.service.j2"
  register: unit_file
  become: true
  tags: [ct-grafana]

- name: "Render Consul services file"
  ansible.builtin.template:
    dest: "{{ grafana_consul_dir }}/core-grafana.json"
    group: root
    mode: "0644"
    owner: root
    src: consul-grafana.json.j2
  become: true
  tags: [ct-grafana]

- name: "Configure Grafana service"
  ansible.builtin.systemd:
    daemon_reload: "{{ unit_file is changed }}"
    enabled: "{{ grafana_svc_enabled }}"
    name: grafana
    state: "{{ grafana_svc_state }}"
  become: true
  tags: [ct-grafana]

# --------------------------------
...
